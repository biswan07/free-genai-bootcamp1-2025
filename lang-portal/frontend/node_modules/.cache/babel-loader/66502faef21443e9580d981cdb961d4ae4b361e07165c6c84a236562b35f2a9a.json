{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: false // Important for CORS\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  return Promise.reject(error);\n});\nexport const dashboardAPI = {\n  getLastStudySession: () => api.get('/dashboard/last_study_session'),\n  getStudyProgress: () => api.get('/dashboard/study_progress'),\n  getQuickStats: () => api.get('/dashboard/quick_stats')\n};\nexport const studyActivitiesAPI = {\n  getAll: () => api.get('/study_activities'),\n  getById: id => api.get(`/study_activities/${id}`),\n  getStudySessions: id => api.get(`/study_activities/${id}/study_sessions`),\n  create: data => api.post('/study_activities', data)\n};\nexport const wordsAPI = {\n  getAll: (page = 1) => api.get(`/words?page=${page}`),\n  getById: id => api.get(`/words/${id}`),\n  getByGroup: groupId => api.get(`/words?group_id=${groupId}`),\n  create: data => api.post('/words', data),\n  update: (id, data) => api.put(`/words/${id}`, data)\n};\nexport const groupsAPI = {\n  getAll: () => api.get('/groups'),\n  getById: id => api.get(`/groups/${id}`),\n  create: data => api.post('/groups', data)\n};\nexport const studySessionsAPI = {\n  getAll: () => api.get('/study-sessions'),\n  getById: id => api.get(`/study-sessions/${id}`),\n  create: data => api.post('/study-sessions', data),\n  recordWordReview: data => api.post('/word-reviews', data)\n};\nexport const quizAPI = {\n  generate: data => api.post('/quiz/generate', data),\n  submitAnswer: data => api.post('/quiz/answer', data),\n  getSummary: sessionId => api.get(`/quiz/summary/${sessionId}`)\n};\nconst apiExports = {\n  dashboardAPI,\n  studyActivitiesAPI,\n  wordsAPI,\n  groupsAPI,\n  studySessionsAPI,\n  quizAPI\n};\nexport default apiExports;","map":{"version":3,"names":["axios","api","create","baseURL","headers","withCredentials","interceptors","response","use","error","console","Promise","reject","dashboardAPI","getLastStudySession","get","getStudyProgress","getQuickStats","studyActivitiesAPI","getAll","getById","id","getStudySessions","data","post","wordsAPI","page","getByGroup","groupId","update","put","groupsAPI","studySessionsAPI","recordWordReview","quizAPI","generate","submitAnswer","getSummary","sessionId","apiExports"],"sources":["/home/biswan02/free-genai-bootcamp1-2025_Windsurf/free-genai-bootcamp1-2025/lang-portal/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: false // Important for CORS\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(\n  response => response,\n  error => {\n    console.error('API Error:', error);\n    return Promise.reject(error);\n  }\n);\n\nexport const dashboardAPI = {\n  getLastStudySession: () => api.get('/dashboard/last_study_session'),\n  getStudyProgress: () => api.get('/dashboard/study_progress'),\n  getQuickStats: () => api.get('/dashboard/quick_stats'),\n};\n\nexport const studyActivitiesAPI = {\n  getAll: () => api.get('/study_activities'),\n  getById: (id) => api.get(`/study_activities/${id}`),\n  getStudySessions: (id) => api.get(`/study_activities/${id}/study_sessions`),\n  create: (data) => api.post('/study_activities', data),\n};\n\nexport const wordsAPI = {\n  getAll: (page = 1) => api.get(`/words?page=${page}`),\n  getById: (id) => api.get(`/words/${id}`),\n  getByGroup: (groupId) => api.get(`/words?group_id=${groupId}`),\n  create: (data) => api.post('/words', data),\n  update: (id, data) => api.put(`/words/${id}`, data),\n};\n\nexport const groupsAPI = {\n  getAll: () => api.get('/groups'),\n  getById: (id) => api.get(`/groups/${id}`),\n  create: (data) => api.post('/groups', data),\n};\n\nexport const studySessionsAPI = {\n  getAll: () => api.get('/study-sessions'),\n  getById: (id) => api.get(`/study-sessions/${id}`),\n  create: (data) => api.post('/study-sessions', data),\n  recordWordReview: (data) => api.post('/word-reviews', data),\n};\n\nexport const quizAPI = {\n  generate: (data) => api.post('/quiz/generate', data),\n  submitAnswer: (data) => api.post('/quiz/answer', data),\n  getSummary: (sessionId) => api.get(`/quiz/summary/${sessionId}`),\n};\n\nconst apiExports = {\n  dashboardAPI,\n  studyActivitiesAPI,\n  wordsAPI,\n  groupsAPI,\n  studySessionsAPI,\n  quizAPI,\n};\n\nexport default apiExports;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ,CAAC;EACDC,eAAe,EAAE,KAAK,CAAC;AACzB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG;EAC1BC,mBAAmB,EAAEA,CAAA,KAAMb,GAAG,CAACc,GAAG,CAAC,+BAA+B,CAAC;EACnEC,gBAAgB,EAAEA,CAAA,KAAMf,GAAG,CAACc,GAAG,CAAC,2BAA2B,CAAC;EAC5DE,aAAa,EAAEA,CAAA,KAAMhB,GAAG,CAACc,GAAG,CAAC,wBAAwB;AACvD,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAG;EAChCC,MAAM,EAAEA,CAAA,KAAMlB,GAAG,CAACc,GAAG,CAAC,mBAAmB,CAAC;EAC1CK,OAAO,EAAGC,EAAE,IAAKpB,GAAG,CAACc,GAAG,CAAC,qBAAqBM,EAAE,EAAE,CAAC;EACnDC,gBAAgB,EAAGD,EAAE,IAAKpB,GAAG,CAACc,GAAG,CAAC,qBAAqBM,EAAE,iBAAiB,CAAC;EAC3EnB,MAAM,EAAGqB,IAAI,IAAKtB,GAAG,CAACuB,IAAI,CAAC,mBAAmB,EAAED,IAAI;AACtD,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG;EACtBN,MAAM,EAAEA,CAACO,IAAI,GAAG,CAAC,KAAKzB,GAAG,CAACc,GAAG,CAAC,eAAeW,IAAI,EAAE,CAAC;EACpDN,OAAO,EAAGC,EAAE,IAAKpB,GAAG,CAACc,GAAG,CAAC,UAAUM,EAAE,EAAE,CAAC;EACxCM,UAAU,EAAGC,OAAO,IAAK3B,GAAG,CAACc,GAAG,CAAC,mBAAmBa,OAAO,EAAE,CAAC;EAC9D1B,MAAM,EAAGqB,IAAI,IAAKtB,GAAG,CAACuB,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;EAC1CM,MAAM,EAAEA,CAACR,EAAE,EAAEE,IAAI,KAAKtB,GAAG,CAAC6B,GAAG,CAAC,UAAUT,EAAE,EAAE,EAAEE,IAAI;AACpD,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAG;EACvBZ,MAAM,EAAEA,CAAA,KAAMlB,GAAG,CAACc,GAAG,CAAC,SAAS,CAAC;EAChCK,OAAO,EAAGC,EAAE,IAAKpB,GAAG,CAACc,GAAG,CAAC,WAAWM,EAAE,EAAE,CAAC;EACzCnB,MAAM,EAAGqB,IAAI,IAAKtB,GAAG,CAACuB,IAAI,CAAC,SAAS,EAAED,IAAI;AAC5C,CAAC;AAED,OAAO,MAAMS,gBAAgB,GAAG;EAC9Bb,MAAM,EAAEA,CAAA,KAAMlB,GAAG,CAACc,GAAG,CAAC,iBAAiB,CAAC;EACxCK,OAAO,EAAGC,EAAE,IAAKpB,GAAG,CAACc,GAAG,CAAC,mBAAmBM,EAAE,EAAE,CAAC;EACjDnB,MAAM,EAAGqB,IAAI,IAAKtB,GAAG,CAACuB,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;EACnDU,gBAAgB,EAAGV,IAAI,IAAKtB,GAAG,CAACuB,IAAI,CAAC,eAAe,EAAED,IAAI;AAC5D,CAAC;AAED,OAAO,MAAMW,OAAO,GAAG;EACrBC,QAAQ,EAAGZ,IAAI,IAAKtB,GAAG,CAACuB,IAAI,CAAC,gBAAgB,EAAED,IAAI,CAAC;EACpDa,YAAY,EAAGb,IAAI,IAAKtB,GAAG,CAACuB,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;EACtDc,UAAU,EAAGC,SAAS,IAAKrC,GAAG,CAACc,GAAG,CAAC,iBAAiBuB,SAAS,EAAE;AACjE,CAAC;AAED,MAAMC,UAAU,GAAG;EACjB1B,YAAY;EACZK,kBAAkB;EAClBO,QAAQ;EACRM,SAAS;EACTC,gBAAgB;EAChBE;AACF,CAAC;AAED,eAAeK,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}