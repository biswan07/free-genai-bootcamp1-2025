{"ast":null,"code":"var _jsxFileName = \"/home/biswan02/free-genai-bootcamp1-2025_Windsurf/free-genai-bootcamp1-2025/lang-portal/frontend/src/pages/Words.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { wordsAPI } from '../services/api';\nimport { Container, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography, CircularProgress, Box, Button, Stack } from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Words = () => {\n  _s();\n  const [words, setWords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchWords = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await wordsAPI.getAll();\n      setWords(response.data.words || []);\n    } catch (err) {\n      console.error('Error fetching words:', err);\n      setError('Failed to fetch words. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchWords();\n  }, []);\n  const handleRefresh = () => {\n    fetchWords();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this),\n        onClick: handleRefresh,\n        disabled: loading,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"French\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Correct Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Wrong Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: words.map(word => {\n            var _word$stats, _word$stats2;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: word.english\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: word.french\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: ((_word$stats = word.stats) === null || _word$stats === void 0 ? void 0 : _word$stats.correct_count) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: ((_word$stats2 = word.stats) === null || _word$stats2 === void 0 ? void 0 : _word$stats2.wrong_count) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, word.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Words, \"OTr2bhw4K+x0cz+jpMoHEaGtUM8=\");\n_c = Words;\nexport default Words;\nvar _c;\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"names":["React","useState","useEffect","wordsAPI","Container","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","CircularProgress","Box","Button","Stack","RefreshIcon","jsxDEV","_jsxDEV","Words","_s","words","setWords","loading","setLoading","error","setError","fetchWords","response","getAll","data","err","console","handleRefresh","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","color","direction","mb","variant","startIcon","onClick","disabled","component","map","word","_word$stats","_word$stats2","english","french","stats","correct_count","wrong_count","id","_c","$RefreshReg$"],"sources":["/home/biswan02/free-genai-bootcamp1-2025_Windsurf/free-genai-bootcamp1-2025/lang-portal/frontend/src/pages/Words.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { wordsAPI } from '../services/api';\nimport {\n  Container,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  CircularProgress,\n  Box,\n  Button,\n  Stack,\n} from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nconst Words = () => {\n  const [words, setWords] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchWords = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await wordsAPI.getAll();\n      setWords(response.data.words || []);\n    } catch (err) {\n      console.error('Error fetching words:', err);\n      setError('Failed to fetch words. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchWords();\n  }, []);\n\n  const handleRefresh = () => {\n    fetchWords();\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Container>\n      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\">Words</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<RefreshIcon />}\n          onClick={handleRefresh}\n          disabled={loading}\n        >\n          Refresh\n        </Button>\n      </Stack>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>English</TableCell>\n              <TableCell>French</TableCell>\n              <TableCell>Correct Count</TableCell>\n              <TableCell>Wrong Count</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {words.map((word) => (\n              <TableRow key={word.id}>\n                <TableCell>{word.english}</TableCell>\n                <TableCell>{word.french}</TableCell>\n                <TableCell>{word.stats?.correct_count || 0}</TableCell>\n                <TableCell>{word.stats?.wrong_count || 0}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n\nexport default Words;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}